apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicas | default 1 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.global.rollingUpdate.maxUnavailable | default 0 }}
  selector:
    matchLabels:
      service: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        service: {{ .Chart.Name }}
    spec:
      {{- include "magda.imagePullSecrets" . | indent 6 }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ include "magda.image" . | quote }}
        imagePullPolicy: {{ include "magda.imagePullPolicy" . | quote }}
        command: [
            "node",
            "/usr/src/app/component/dist/index.js",
            "--listenPort", "80",
            "--dbHost", "session-db",
            "--dbPort", "5432",
            "--cookieJson", "/etc/gateway-config/cookie.json",
            "--externalUrl", {{ .Values.global.externalUrl | quote }},
            "--authPluginRedirectUrl", {{ .Values.authPluginRedirectUrl | default .Values.global.authPluginRedirectUrl | quote }},
            "--authApiUrl", "http://authorization-api/v0",
            "--authPluginConfigJson", "/etc/{{ .Chart.Name }}-config/authPluginConfig.json",
            "--clientId", {{ .Values.clientId | required "clientId is required for `magda-auth-okat` chart." | quote }},
            {{- if .Values.scope }}
            "--scope", {{ .Values.scope | quote }},
            {{- end }}
            {{- if .Values.timeout }}
            "--timeout", {{ .Values.timeout | quote }},
            {{- end }}
            {{- if .Values.maxClockSkew }}
            "--maxClockSkew", {{ .Values.maxClockSkew | quote }},
            {{- end }}
            {{- if .Values.domain }}
            "--issuer", {{ .Values.domain | printf "https://%s/" | quote }}
            {{- else if .Values.issuer }}
            "--issuer", {{ .Values.issuer | quote }}
            {{- else }}
            {{- fail "either `domain` or `issuer` is required for `magda-auth-okat` chart." -}}
            {{- end }}
        ]
        volumeMounts:
          - name: gateway-config
            mountPath: /etc/gateway-config
          - name: "{{ .Chart.Name }}-config"
            mountPath: "/etc/{{ .Chart.Name }}-config"
{{- if .Values.global.enableLivenessProbes }}
        livenessProbe:
          httpGet:
            path: "/healthz"
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: USER_ID
          value: {{ .Values.global.defaultAdminUserId | default .Values.defaultAdminUserId }}
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: jwt-secret
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: auth-secrets
              key: session-secret
        {{- include "magda.db-client-credential-env" (dict "dbName" "session-db" "root" .) | indent 8 }}
        - name: CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-secrets
              key: okta-client-secret
      # --- load cookie setting from gateway-config
      volumes:
        - name: gateway-config
          configMap:
            name: gateway-config
        - name: "{{ .Chart.Name }}-config"
          configMap:
            name: "{{ .Chart.Name }}-config"
